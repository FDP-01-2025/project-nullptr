#include <iostream>
#include <string>
#include <vector>
#include "stealmaze.h"
using namespace std;
bool playstealmaze()
{
    int XcoordP, YcoordP;
    char mazebase[20][20]{
        {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#'}, // 1 the map of the maze
        {'#', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#'}, // 2
        {'\033[32mW\033[0m', '#', '#', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', ' ', ' ', '#', '#', '#', ' ', '#'}, // 3
        {' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#'}, // 4
        {' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', '#', '#', ' ', '#', '#', '#', ' ', '#'}, // 5
        {' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' '}, // 6
        {' ', '#', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', '#', '#', ' ', '#', '#', '#', '#', '#'}, // 7
        {' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', '\033[34mS\033[0m'}, // 8
        {' ', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#'}, // 9
        {' ', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' '}, // 10
        {' ', '#', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, // 11
        {' ', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' '}, // 12
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, // 13
        {'#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', ' '}, // 14
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', '#', '#', '#', ' ', ' ', '#', '#', ' '}, // 15
        {'#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' '}, // 16
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', '#', '#', '#', ' ', '#', '#', '#', ' '}, // 17
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '}, // 18
        {' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#'}, // 19
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#'}  // 20
    };
    cout << "\033[32m"
     << " #####  ####### #######    #    #       #     #    #    ####### ####### \n"
     << "#     #    #    #         # #   #       ##   ##   # #        #  #       \n"
     << "#          #    #        #   #  #       # # # #  #   #      #   #       \n"
     << " #####     #    #####   #     # #       #  #  # #     #    #    #####   \n"
     << "      #    #    #       ####### #       #     # #######   #     #       \n"
     << "#     #    #    #       #     # #       #     # #     #  #      #       \n"
     << " #####     #    ####### #     # ####### #     # #     # ####### ####### \n"
     << "\033[0m";
    cout << "Use WASD to move\n";
    for (int i = 0; i < 20; i++) {
    for (int j = 0; j < 20; j++) {
        if (mazebase[i][j] == 'S') {
            YcoordP = i;
            XcoordP = j;
            mazebase[i][j] = ' ';
        }
    }
}
playingmaze(mazebase, XcoordP, YcoordP);

}
